% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GroupStructure.R
\name{GroupStructure}
\alias{GroupStructure}
\title{Group Structure}
\description{
Class to represent a group structure.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{feature_names}}{(character()) \cr
The names of the features of the \link[mlr3:Task]{mlr3::Task}.
FIXME: make private or AB}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{n_features}}{(integer(1))\cr
Number of features part of the \link[mlr3:Task]{mlr3::Task}.}

\item{\code{n_selected}}{(integer(1))\cr
Number of selected features based on the group structure.}

\item{\code{selected_features}}{(character())\cr
Names of the selected features.}

\item{\code{unselected_features}}{(character())\cr
Names of the unselected features.}

\item{\code{n_groups}}{(integer(1))\cr
Number of groups under the group structure.
Determined based on the number of equivalence classes + 1 (due to the first group of unselected features also always being accounted for).}

\item{\code{monotone_features}}{(\link[data.table:data.table]{data.table::data.table})\cr
A data.table with as many rows as features with the feature column indicating the feature and the monotonicity column indicating the monotonicity constraint as an integer (\code{NA} indicating no constraint, e.g., for unselected features).}

\item{\code{groups}}{(list())\cr
A list containing a character vector of all features (\verb{$features}), an integer vector of all equivalence classes (\verb{$eqcs}) and an integer vector indicating the belonging of each feature to each class (\verb{$belonging)}.}

\item{\code{monotone_eqcs}}{(\link[data.table:data.table]{data.table::data.table})\cr
A data.table with as many rows as equivalence classes with the eqcs column indicating the equivalence class and the monotonicity column indicating the monotonicity constraint as an integer (\code{NA} indicating no constraint, e.g., for the group of unselected features).}

\item{\code{allow_all_unselected}}{(logical(1))\cr
Whether unselecting all features should be allowed i.e., having only a single group of unselected features is considered a valid group structure.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-GroupStructure-new}{\code{GroupStructure$new()}}
\item \href{#method-GroupStructure-get_groups}{\code{GroupStructure$get_groups()}}
\item \href{#method-GroupStructure-get_matrix}{\code{GroupStructure$get_matrix()}}
\item \href{#method-GroupStructure-create_selector}{\code{GroupStructure$create_selector()}}
\item \href{#method-GroupStructure-create_interaction_constraints}{\code{GroupStructure$create_interaction_constraints()}}
\item \href{#method-GroupStructure-create_monotonicity_constraints}{\code{GroupStructure$create_monotonicity_constraints()}}
\item \href{#method-GroupStructure-get_full_group_structure}{\code{GroupStructure$get_full_group_structure()}}
\item \href{#method-GroupStructure-mutate}{\code{GroupStructure$mutate()}}
\item \href{#method-GroupStructure-crossover}{\code{GroupStructure$crossover()}}
\item \href{#method-GroupStructure-get_crossing_sections}{\code{GroupStructure$get_crossing_sections()}}
\item \href{#method-GroupStructure-clone}{\code{GroupStructure$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GroupStructure-new"></a>}}
\if{latex}{\out{\hypertarget{method-GroupStructure-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GroupStructure$new(
  task,
  n_selected = NULL,
  scores = NULL,
  interaction_detector = NULL,
  unconstrained_weight_table = NULL,
  n_interactions_prob = NULL,
  unconstrained = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task}}{([mlr3::Task)\cr
Task.}

\item{\code{n_selected}}{(integer(1))\cr
Number of selected features.}

\item{\code{scores}}{(\link[data.table:data.table]{data.table::data.table})\cr
data.table with as many rows as features and two columns \code{feature} and \code{score} with \code{feature} being the id of
the feature and \code{score} being the feature importance score.}

\item{\code{interaction_detector}}{(InteractionDetector)\cr
Interaction detector.}

\item{\code{unconstrained_weight_table}}{(\link[data.table:data.table]{data.table::data.table})\cr
data.table with as many rows as features and two columns \code{feature_name} and \code{unconstrained_weight} with
\code{feature_name} being the id of the feature and \code{unconstrained_weight} being the score based on an
monotonicity detector. FIXME: rename}

\item{\code{n_interactions_prob}}{(numeric(1) | NULL)\cr
Probability to sample the number of pairwise interactions from a truncated geometric distribution. FIXME: not used}

\item{\code{unconstrained}}{(logical(1)) \cr
Whether an unconstrained group structure should be created.
This means that all features are selected and all features are allowed to interact and no features are
constrained with respect to a monotone feature effect.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GroupStructure-get_groups"></a>}}
\if{latex}{\out{\hypertarget{method-GroupStructure-get_groups}{}}}
\subsection{Method \code{get_groups()}}{
Method to get a more human readable representation of the group structure.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GroupStructure$get_groups()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A (\code{list()}) of character vectors with each character vector containing names of features that are in the same group.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GroupStructure-get_matrix"></a>}}
\if{latex}{\out{\hypertarget{method-GroupStructure-get_matrix}{}}}
\subsection{Method \code{get_matrix()}}{
Method to get the pairwise interaction matrix of features.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GroupStructure$get_matrix()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A (\code{matrix()}) filled with integers indicating allowance of pairwise interaction of selected features.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GroupStructure-create_selector"></a>}}
\if{latex}{\out{\hypertarget{method-GroupStructure-create_selector}{}}}
\subsection{Method \code{create_selector()}}{
Method to create a \link[mlr3pipelines:Selector]{mlr3pipelines::Selector} of selected features.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GroupStructure$create_selector()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\link[mlr3pipelines:Selector]{mlr3pipelines::Selector})
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GroupStructure-create_interaction_constraints"></a>}}
\if{latex}{\out{\hypertarget{method-GroupStructure-create_interaction_constraints}{}}}
\subsection{Method \code{create_interaction_constraints()}}{
Method to create a list of interaction constraints of features.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GroupStructure$create_interaction_constraints()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{list()}) of integer vectors of feature indices allowed to interact with each other.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GroupStructure-create_monotonicity_constraints"></a>}}
\if{latex}{\out{\hypertarget{method-GroupStructure-create_monotonicity_constraints}{}}}
\subsection{Method \code{create_monotonicity_constraints()}}{
Method to create an integer vector of monotonicity constraints of selected features.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GroupStructure$create_monotonicity_constraints()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Named (\code{integer()}) vector of monotonicity constraints of selected features.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GroupStructure-get_full_group_structure"></a>}}
\if{latex}{\out{\hypertarget{method-GroupStructure-get_full_group_structure}{}}}
\subsection{Method \code{get_full_group_structure()}}{
Method to create the full group structure based on the equivalence classes of features allowed to interact and the unselected features forming the first group.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GroupStructure$get_full_group_structure(eqcs, unselected_features)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eqcs}}{(\code{list()})\cr
List containing a (\code{character()}) vector of selected features, an (\code{integer()}) vector of equivalence classes ids and an (1integer()`) vector indicating the equivalence class each feature belongs to.}

\item{\code{unselected_features}}{(\code{character()})\cr
Character vector describing the set on unselected features}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{list()}) similarly as \code{eqcs} but updated so that the unselected features now resample the first group (equivalence class)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GroupStructure-mutate"></a>}}
\if{latex}{\out{\hypertarget{method-GroupStructure-mutate}{}}}
\subsection{Method \code{mutate()}}{
Performs mutations on the group structure by creating a new group,
destroying a group, shuffling membership, or mutating group membership.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GroupStructure$mutate(p)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{p}}{(numeric(1))\cr
Numeric value between 0 and 1 specifying the mutation probability.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible (\code{NULL})
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GroupStructure-crossover"></a>}}
\if{latex}{\out{\hypertarget{method-GroupStructure-crossover}{}}}
\subsection{Method \code{crossover()}}{
Performs crossover between the groups of two \link{GroupStructure} objects.
First parent is given by groups of the object itself (self$groups).
Combines and exchanges groups between the parent objects based on the specified crossing sections.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GroupStructure$crossover(parent2, crossing_sections)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{parent2}}{(list(1))\cr
A group of a \link{GroupStructure} object representing the second parent.}

\item{\code{crossing_sections}}{(list(1))\cr
A list containing the crossing sections for the first parent (\code{crossing_section1}) and second parent (\code{crossing_section2}).
The crossing sections define the boundaries of groups to be exchanged between the parents.
Each crossing section is an integer vector of length 2, indicating the start and end points of the crossing section.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible (\code{NULL})
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GroupStructure-get_crossing_sections"></a>}}
\if{latex}{\out{\hypertarget{method-GroupStructure-get_crossing_sections}{}}}
\subsection{Method \code{get_crossing_sections()}}{
Calculates and returns the crossing sections for performing crossover between
the group structures of two groups of \link{GroupStructure} objects. The crossing sections define the boundaries
of groups to be exchanged between the parents during crossover.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GroupStructure$get_crossing_sections(parent2)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{parent2}}{A \verb{$groups} of a \link{GroupStructure} object representing the second parent.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A (\code{list()}) containing the crossing sections for the first parent (\code{crossing_section1}) and second parent (\code{crossing_section2}).
Each crossing section is an integer vector of length 2, indicating the start and end points of the crossing section.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GroupStructure-clone"></a>}}
\if{latex}{\out{\hypertarget{method-GroupStructure-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GroupStructure$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
