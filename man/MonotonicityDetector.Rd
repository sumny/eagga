% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MonotonicityDetector.R
\name{MonotonicityDetector}
\alias{MonotonicityDetector}
\title{Monotonicity Detector}
\description{
Detects whether a feature should have a monotone increasing or decreasing effect (if enforced) and also quantifies
the tendency of a monotone relationship between the feature and the target.

Only works with integer or numeric features.
Logical features must be converted to integers.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{task}}{(\link[mlr3:Task]{mlr3::Task})\cr
Task.}

\item{\code{classification}}{(logical(1))\cr
Whether the task is a classification task.}

\item{\code{data}}{(\link[data.table:data.table]{data.table::data.table})\cr
data.table of data of the \link[mlr3:Task]{mlr3::Task}.}

\item{\code{n_features}}{(integer(1))\cr
Number of features part of the \link[mlr3:Task]{mlr3::Task}.}

\item{\code{feature_names}}{(character()) \cr
The names of the features of the \link[mlr3:Task]{mlr3::Task}.}

\item{\code{feature_types}}{(character()) \cr
The types of the features of the \link[mlr3:Task]{mlr3::Task}.}

\item{\code{y_name}}{(character(1)) \cr
The names of the target of the \link[mlr3:Task]{mlr3::Task}.}

\item{\code{rho_table}}{(\link[data.table:data.table]{data.table::data.table})\cr
data.table with as many rows as features with the feature_name column indicating the feature and the rho column
indicating Spearman's Rho.}

\item{\code{unconstrained_weight_table}}{(\link[data.table:data.table]{data.table::data.table})\cr
data.table with as many rows as features with the feature_name column indicating the feature and the unconstrained_weight column
indicating the absolute Spearman's Rho scaled rescaled to \verb{[0.2, 0.8]}.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MonotonicityDetectorDetector-new}{\code{MonotonicityDetector$new()}}
\item \href{#method-MonotonicityDetectorDetector-compute}{\code{MonotonicityDetector$compute()}}
\item \href{#method-MonotonicityDetectorDetector-get_sign}{\code{MonotonicityDetector$get_sign()}}
\item \href{#method-MonotonicityDetectorDetector-compute_unconstrained_weights}{\code{MonotonicityDetector$compute_unconstrained_weights()}}
\item \href{#method-MonotonicityDetectorDetector-clone}{\code{MonotonicityDetector$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MonotonicityDetectorDetector-new"></a>}}
\if{latex}{\out{\hypertarget{method-MonotonicityDetectorDetector-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MonotonicityDetector$new(task)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task}}{([mlr3::Task)\cr
Task.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MonotonicityDetectorDetector-compute"></a>}}
\if{latex}{\out{\hypertarget{method-MonotonicityDetectorDetector-compute}{}}}
\subsection{Method \code{compute()}}{
Fits a decision tree for each feature and the target variable using subsampled data and calculates Spearman's Rho between the prediction (numeric for regression and probability of the
positive class for binary classification) and the feature.
Repeats this process for each feature ten times and averages the Spearman's Rhos to fill the \verb{$rho_table}
Subsampling fraction is set to \code{0.9} and the decision tree is a standard \link[mlr3:LearnerRegr]{mlr3::LearnerRegr} or \link[mlr3:LearnerClassif]{mlr3::LearnerClassif}.
FIXME: expose hyperparameters etc.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MonotonicityDetector$compute()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible (\code{NULL})
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MonotonicityDetectorDetector-get_sign"></a>}}
\if{latex}{\out{\hypertarget{method-MonotonicityDetectorDetector-get_sign}{}}}
\subsection{Method \code{get_sign()}}{
Method to determine the sign of a given feature based on the average Spearman's Rho correlation if it should be constrained to have a monotone effect.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MonotonicityDetector$get_sign(feature_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{feature_name}}{(\code{character(1)})\cr
Feature for which the sign should be determined}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{integer()}) vector indicating the sign of the feature if it should be constrained to have a monotone effect
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MonotonicityDetectorDetector-compute_unconstrained_weights"></a>}}
\if{latex}{\out{\hypertarget{method-MonotonicityDetectorDetector-compute_unconstrained_weights}{}}}
\subsection{Method \code{compute_unconstrained_weights()}}{
Method to construct the unconstrained weights table from the average Spearman's Rhos by taking the absolute value
and scaling it to \verb{[0.2, 0.8]}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MonotonicityDetector$compute_unconstrained_weights()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible (\code{NULL})
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MonotonicityDetectorDetector-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MonotonicityDetectorDetector-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MonotonicityDetector$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
